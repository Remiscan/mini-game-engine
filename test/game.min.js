import*as GEM from"../game-engine.js";const start=async function(){this.state.jumpFrames=0,this.addActions({jump:["Space"]});const t=this.addLevel({id:"test0"});t.addObject({width:t.width,height:t.height,draw:function(t){t.fillStyle="black",t.fillRect(0,0,this.width,this.height)}}),t.addObject({id:"rect",width:32,height:32,position:{x:64,y:64},collision:!0,draw:function(t){this.allCollisions().length>0?t.fillStyle="red":t.fillStyle="blue",t.fillRect(this.position.x,this.position.y,this.width,this.height)}}),this.addImage("boole","assets/boole1.png"),this.addSound("bump","assets/ouch.mp3"),t.addObject({id:"player",width:32,height:32,position:{x:32,y:128},maxSpeed:5,controllable:!0,collision:!0,assets:["boole","bump"],draw:function(t,{x:e,y:i,game:s}){const a=this.assets.find((t=>"boole"===t.id)).data;t.imageSmoothingEnabled=!1,this.state.facingRight?(t.translate(s.width,0),t.scale(-1,1),t.drawImage(a,s.width-e,i,-this.width,this.height)):t.drawImage(a,e,i,this.width,this.height)}}),await this.loadLevel("test0")},update=function(t){this.state.actions.includes("jump")?this.state.jumpFrames++:this.state.jumpFrames>0&&(this.state.jumpFrames=0);const e=[...this.state.level.objects].filter((t=>t.controllable));for(const i of e){const e=Object.assign({},i.position),s={x:(-this.state.actions.includes("left")+this.state.actions.includes("right"))*t,y:(-this.state.actions.includes("up")+this.state.actions.includes("down"))*t};if(s.x>0?i.state.facingRight=!0:s.x<0&&(i.state.facingRight=!1),0===s.x&&0===s.y){i.state.bumped=!1;continue}const a=i.moveByVector(s);a.x===e.x&&a.y===e.y&&(i.state.bumped||this.playSound("bump"),i.state.bumped=!0)}},game=new GEM.Game(start,update,{tickRate:60}),buttonPlay=document.querySelector(".load-game");buttonPlay.addEventListener("click",(()=>{buttonPlay.remove(),game.play()}));const buttonPause=document.querySelector(".pause-game");buttonPause.addEventListener("click",(()=>game.paused=!game.paused));